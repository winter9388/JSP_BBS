/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.23
 * Generated at: 2022-08-12 11:50:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import user.UserDAO;
import java.io.PrintWriter;

public final class joinAction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("user.UserDAO");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("   <!-- UserDAO 임포트 -->\n");
      out.write(" <!-- 자바 스크립트 문장 작성위해 필요 -->\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write(" <!-- 건너오는 모든 데이터를 UTF-8으로 받을수 있게함 -->\n");
      user.User user = null;
      user = (user.User) _jspx_page_context.getAttribute("user", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (user == null){
        user = new user.User();
        _jspx_page_context.setAttribute("user", user, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write(" <!-- java Beans를 현재페이지 에서만 사용하는것을 명시 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userID", request.getParameter("userID"), request, "userID", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userID를 프로퍼티에 담음 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userPassword", request.getParameter("userPassword"), request, "userPassword", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userPassword를 프로퍼티에 담음 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userPasswordChk", request.getParameter("userPasswordChk"), request, "userPasswordChk", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userPasswordChk를 프로퍼티에 담음 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userName", request.getParameter("userName"), request, "userName", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userName를 프로퍼티에 담음 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userGender", request.getParameter("userGender"), request, "userGender", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userGender를 프로퍼티에 담음 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userEmail", request.getParameter("userEmail"), request, "userEmail", false);
      out.write(" <!-- 로그인 페이지에서 넘겨주는 userEmail를 프로퍼티에 담음 -->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>JSP 게시판 웹 사이트</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");

		String userID = null;
		if(session.getAttribute("userID") != null){ // 세션이 있을경우 (누군가 이미 로그인을 한 경우)
			userID = (String)session.getAttribute("userID"); // 할당된 세션 아이디를 변수에 입력
		}
		if(userID != null){ // 로그인 되어있는경우 메인페이지로 이동
			PrintWriter script = response.getWriter(); // 스크립트 문장을 사용할수 있게함
			script.println("<script>");
			script.println("alert('이미 로그인 되어있습니다.')"); 
			script.println("location.href = 'main.jsp'"); // 이전 페이지로 사용자를 돌려보냄
			script.println("</script>");
		}
		if(user.getUserID() == null || user.getUserPassword() == null || user.getUserName() == null 
			|| user.getUserGender() == null || user.getUserEmail() == null ) { // 회원가입시 필요항목 입력누락이 있는지 체크
			PrintWriter script = response.getWriter(); // 스크립트 문장을 사용할수 있게함
			script.println("<script>");
			script.println("alert('입력이 안된 사항이 있습니다.')"); 
			script.println("history.back()"); // 이전 페이지로 사용자를 돌려보냄
			script.println("</script>");	
		}else{ // 필요 항목 전부 입력 완료시
			if(!user.getUserPassword().equals(user.getUserPasswordChk())){ // 패스워드 체크 불일치
				PrintWriter script = response.getWriter(); // 스크립트 문장을 사용할수 있게함
				script.println("<script>");
				script.println("alert('패스워드를 다시 입력해 주십시오.')"); 
				script.println("history.back()"); // 이전 페이지로 사용자를 돌려보냄
				script.println("</script>");
			}else {
				UserDAO userDAO = new UserDAO(); // DAO인스턴스 생성
				int result = userDAO.join(user); // 로그인 페이지에서 입력받은 아이디와 패스워드를 파라메터로 받음
				if(result == -1){ // 데이터베이스 오류 (PRIMARY KEY 중복 -> 동일한 아이디가 존재함)
					PrintWriter script = response.getWriter(); // 스크립트 문장을 사용할수 있게함
					script.println("<script>");
					script.println("alert('동일한 아이디가 존재 합니다.')"); 
					script.println("history.back()"); // 이전 페이지로 사용자를 돌려보냄
					script.println("</script>");
				}else { // 회원가입 성공 -> main.jsp로 이동 (result가 -1이 아닌경우는 전부 회원가입 성공으로 판단)
					session.setAttribute("userID", user.getUserID()); // 회원가입 성공시 세션 생성
					PrintWriter script = response.getWriter(); // 스크립트 문장을 사용할수 있게함
					script.println("<script>");
					script.println("location.href = 'main.jsp'"); // 이전 페이지로 사용자를 돌려보냄
					script.println("</script>");
				}
			}
		}	
	
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
